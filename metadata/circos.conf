# MINIMUM CIRCOS CONFIGURATION 
#
# The 'hello world' Circos tutorial. Only required
# configuration elements are included.
#
# Common optional elements are commented out.

# Defines unit length for ideogram and tick spacing, referenced
# using "u" prefix, e.g. 10u
#chromosomes_units           = 1000000

# Show all chromosomes in karyotype file. By default, this is
# true. If you want to explicitly specify which chromosomes
# to draw, set this to 'no' and use the 'chromosomes' parameter.
# chromosomes_display_default = yes

# Chromosome name, size and color definition
karyotype = bands.txt

<ideogram>

	<spacing>
	# spacing between ideograms
	default = 0.005r
	</spacing>
	
	# ideogram position, thickness and fill
	radius           = 0.90r
	thickness        = 1p
	fill             = yes
	
	#stroke_thickness = 1
	#stroke_color     = black
	
	# ideogram labels
	# <<include ideogram.label.conf>>
	
	# ideogram cytogenetic bands, if defined in the karyotype file
	# <<include bands.conf>>

</ideogram>

# image size, background color, angular position
# of first ideogram, transparency levels, output
# file and directory
#
# it is best to include these parameters from etc/image.conf
# and override any using param* syntax
#
# e.g.
# <image>
# <<include etc/image.conf>>
# radius* = 500
# </image>
<image>
<<include etc/image.conf>> # included from Circos distribution 
</image>

# RGB/HSV color definitions, color lists, location of fonts,
# fill patterns
<<include etc/colors_fonts_patterns.conf>> # included from Circos distribution

# debugging, I/O an dother system parameters
<<include etc/housekeeping.conf>> # included from Circos distribution

# <ticks> blocks to define ticks, tick labels and grids
#
# requires that chromosomes_units be defined
#
# <<include ticks.conf>>

<links>
	<link data1>
		z = 0
		ribbon = yes
		flat   = yes
		radius = 0.75r
		bezier_radius = 0.1r
		show         = yes
		stroke_color = black		
		stroke_thickness = 1
		file         = links.txt
		record_limit = 2500		
		<rules>
# 			<rule>
# 				condition  = 1
# 				color      = eval(var(color) . "_a" . var(thickness))
# 				importance = 90				
# 			</rule>
			<rule>
				condition = eval(var(thickness) < 10)
				show = no
				importance = 100
			</rule>
			<rule>
				# within phylum
				condition = eval(var(color) eq 'green' )
				show = no
				importance = 100
			</rule>			
		</rules>
	</link>
</links>

<plots>
	
	# class labels
	<plot>
		type  = text
		color = black
		file  = class.txt
		
		# on tick scale
		r0 = 1r
		r1 = 1r+300p
		
		show_links     = yes
		link_dims      = 0p,0p,50p,0p,10p
		link_thickness = 2p
		link_color     = black
		
		label_size   = 20p
		label_font   = condensed
		
		padding  = 0p
		rpadding = 0p
	</plot>	
	
	# phylum labels
	<plot>
		type  = text
		color = black
		file  = phylum.txt
		
		r0 = 1.4r
		r1 = 1.4r+300p
		
		show_links     = yes
		link_dims      = 0p,0p,50p,0p,10p
		link_thickness = 2p
		link_color     = black
		
		label_size   = 20p
		label_font   = condensed
		
		padding  = 0p
		rpadding = 0p
	</plot>	
	<plot> 
		file = phylum-span.txt 
		type = highlight 
		r1 = 1.4r+1p 
		r0 = 1.4r 
		fill_color = black 
		stroke_thickness = 0 
	</plot> 	
	
	# superkingdom labels
	<plot>
		type  = text
		color = black
		file  = superkingdom.txt
		
		r0 = 1.8r
		r1 = 1.8r+300p
		
		show_links     = yes
		link_dims      = 0p,0p,50p,0p,10p
		link_thickness = 2p
		link_color     = black
		
		label_size   = 20p
		label_font   = condensed
		
		padding  = 0p
		rpadding = 0p
	</plot>	
	<plot> 
		file = superkingdom-span.txt 
		type = highlight 
		r1 = 1.8r+1p 
		r0 = 1.8r 
		fill_color = black 
		stroke_thickness = 0 
	</plot>
		
	<plot>
		type = histogram
		file = scatter.txt

		r1    = 1r		
		r0    = 0.75r		
		max   = 4
		min   = -1
				
		stroke_type = outline
		thickness   = 1
		color       = black
		extend_bin  = no
		fill_under  = yes
		
		<rules>
			<rule>
				condition = 1
				fill_color = eval(sprintf("spectral-9-div-%d",remap_int(var(value),-1,4,1,9)))
				#color = eval(sprintf("spectral-9-div-%d",remap_int(var(value),-1,4,1,9)))				
			</rule>
# 			<rule>
# 				condition = var(value) < 0
# 				fill_color = red
# 			</rule>
# 			<rule>
# 				condition = var(value) < 1
# 				fill_color = orange
# 			</rule>			
# 			<rule>
# 				condition = var(value) < 2
# 				fill_color = yellow
# 			</rule>				
# 			<rule>
# 				condition = var(value) < 3
# 				fill_color = lgreen
# 			</rule>	
# 			<rule>
# 				condition = var(value) < 4
# 				fill_color = dgreen
# 			</rule>	
		</rules>
		
		
		<axes>
			<axis>
				spacing   = 0.2r
				color     = lgrey
				thickness = 2
			</axis>
		</axes>					
	</plot>
</plots>

